name: Build and deploy Node.js app to Azure Web App - journy

on:
  push:
    branches:
      - cloud
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22.x'
          cache: 'npm'
          cache-dependency-path: ./journy/package-lock.json

      - name: Install dependencies and build
        env:
          MONGODB_URI: ${{ secrets.MONGODB_URI }}
          OPEN_AI_ENDPOINT: ${{ secrets.OPEN_AI_ENDPOINT }}
          OPEN_AI_MODEL: ${{ secrets.OPEN_AI_MODEL }}
          OPEN_AI_DEPLOYMENT_NAME: ${{ secrets.OPEN_AI_DEPLOYMENT_NAME }}
          OPEN_AI_API_KEY: ${{ secrets.OPEN_AI_API_KEY }}
          CLERK_SECRET_KEY: ${{ secrets.CLERK_SECRET_KEY }}
          NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY: ${{ secrets.NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY }}
        working-directory: ./journy
        run: |
          npm ci
          npm run build

      # Create a deployment package with only necessary files
      - name: Create deployment package
        working-directory: ./journy
        run: |
          # Create a clean directory for deployment
          mkdir -p ../deploy
          
          # Copy necessary files
          cp package*.json ../deploy/
          cp -r .next ../deploy/
          cp -r public ../deploy/ || echo "No public directory found"
          cp next.config.* ../deploy/ || echo "No next.config found"
          
          # Copy other config files if they exist
          cp tailwind.config.* ../deploy/ || echo "No tailwind.config found"
          cp postcss.config.* ../deploy/ || echo "No postcss.config found"

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: node-app
          path: ./deploy

  deploy:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: node-app
          path: ./deploy

      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_5683F3801E704E079E344F36FF858E29 }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_B0F9E7C62C31451DBB90C176921DAFD5 }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_4C4F0E53555A4726A9817A3C9A618785 }}

      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'jounry'  # Make sure this matches your actual Azure app name
          slot-name: 'Production'
          package: ./deploy
